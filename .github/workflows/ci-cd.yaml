name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Add EC2 host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 98.81.235.62 >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          # Eliminar el directorio anterior y crear uno nuevo
          ssh -i private_key.pem ec2-user@98.81.235.62 "rm -rf ~/servidorweb && mkdir ~/servidorweb"
          
          # Copiar los archivos de la aplicación
          scp -i private_key.pem -r app/ ec2-user@98.81.235.62:~/servidorweb/
          
          # Detener cualquier proceso anterior de Flask si está corriendo
          ssh -i private_key.pem ec2-user@98.81.235.62 << 'EOF'
            # Buscar el PID del proceso Flask y eliminarlo
            pid=$(ps aux | grep 'python3 app/main.py' | grep -v grep | awk '{print $2}')
            if [ ! -z "$pid" ]; then
              kill -9 $pid
            fi
          EOF
          
          # Instalar las dependencias y reiniciar el servicio Flask
          ssh -i private_key.pem ec2-user@98.81.235.62 "cd ~/servidorweb && python3 -m pip install -r app/requierements.txt && nohup python3 app/main.py &"
